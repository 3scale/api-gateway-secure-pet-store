{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "CloudFormation template to create a CLI instance for the Pet Store Demo",

  "Mappings": {

    "AWSRegionToAmznAMI": {
      "eu-west-1": {
        "AMI": "ami-bff32ccc"
      }
    }
  },

  "Parameters": {

    "CLIInstanceType": {
      "Type": "String",
      "Description": "CLI instance type",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro", "t2.small", "t2.medium", "t2.large"],
      "ConstraintDescription": "must be a valid T2 EC2 instance type."
    },

    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances"
    },

    "SourceCidr": {
      "Type": "String",
      "Description": "Optional - CIDR/IP range for ECS instance outside access - defaults to 0.0.0.0/0",
      "Default": "0.0.0.0/0"
    }
  },

  "Resources": {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PetStoreVPC"
          }
        ]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "VPC"
    },

    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "VPC",
        "InternetGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },

    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [ "0", { "Fn::GetAZs": "" } ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet"
          }
        ]
      }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": [
        "VPC",
        "AttachGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public"
          }
        ]
      }
    },

    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "AttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },

    "PublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicRouteTable",
        "PublicSubnet",
        "AttachGateway"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },

    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {"Service": ["ec2.amazonaws.com"] },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },

    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "RootRole"} ]
      }
    },

    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CLI Security Group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress":
        [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SourceCidr" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "SourceCidr" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Ref": "SourceCidr" }
          }
        ],
        "Tags": [{
          "Key": "Name",
          "Value": "CLISecurityGroup"
        }]
      }
    },

    "CLIInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {"Ref": "KeyName"},
        "ImageId": {"Fn::FindInMap": ["AWSRegionToAmznAMI", {"Ref": "AWS::Region"}, "AMI"] },
        "InstanceType": {"Ref": "CLIInstanceType"},
        "NetworkInterfaces": [{
          "GroupSet": [
            { "Ref": "SecurityGroup" }
          ],
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "DeleteOnTermination": "true",
          "SubnetId": {
            "Ref": "PublicSubnet"
          }
        }],
        "BlockDeviceMappings" : [
           {
              "DeviceName" : "/dev/xvda",
              "Ebs" : {
                "VolumeSize" : "10",
                "VolumeType":"gp2"
              }
           }
        ],
        "IamInstanceProfile": {"Ref": "RootInstanceProfile"},
        "Tags": [{"Key": "Name", "Value": "CLI Instance"} ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "yum -y update\n",
                "# Install Docker\n",
                "yum -y install docker\n",
                "yum -y install git\n",
                "usermod -a -G docker ec2-user\n",
                "service docker start\n",
                "# Setup the AWS CLI\n",
                "pip install --upgrade awscli\n",
        				"mkdir -p /home/ec2-user/.aws\n",
        				"touch /home/ec2-user/.aws/config\n",
                "echo [default] >> /home/ec2-user/.aws/config\n",
                "echo region=", {"Ref": "AWS::Region"}, " >> /home/ec2-user/.aws/config\n",
                "chown -R ec2-user:ec2-user /home/ec2-user/.aws\n",
                "mkdir /tmp/.m2\n",
                "chmod 777 /tmp/.m2"
              ]
            ]
          }
        }
      }
    }

  },

  "Outputs": {

    "CliInstance": {
      "Description": "Public DNS name of the CLI Instance",
      "Value": {
        "Fn::GetAtt": ["CLIInstance", "PublicDnsName"]
      }
    }
  }
}
